// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  id_role      Int            @db.Integer
  username     String         @unique @db.VarChar(255)
  password     String         @db.VarChar(255)
  name         String         @db.VarChar(255)
  phone        String         @db.VarChar(255)
  address      String         @db.Text
  status       String         @default("PENDING") @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamptz()
  updated_at   DateTime       @default(now()) @updatedAt @db.Timestamptz()
  Role         Role           @relation(fields: [id_role], references: [id])
  SpecialPrice SpecialPrice[]
  Complaint    Complaint[]
  Cart         Cart?
  Sale         Sale[]

  @@map("users")
}

model Role {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @default(now()) @updatedAt @db.Timestamptz()
  User       User[]

  @@map("roles")
}

model Car {
  id              Int         @id @default(autoincrement())
  id_car_brand    Int         @db.Integer
  name            String      @db.VarChar(255)
  production_year String      @db.VarChar(255)
  type            String?     @db.VarChar(255)
  created_at      DateTime    @default(now()) @db.Timestamptz()
  updated_at      DateTime    @default(now()) @updatedAt @db.Timestamptz()
  CarBrand        CarBrand    @relation(fields: [id_car_brand], references: [id])
  SparePart       SparePart[]

  @@map("cars")
}

model CarBrand {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  manufacture String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamptz()
  updated_at  DateTime @default(now()) @updatedAt @db.Timestamptz()
  Car         Car[]

  @@map("car_brands")
}

model SparePart {
  id                  Int               @id @default(autoincrement())
  id_spare_part_brand Int               @db.Integer
  id_category         Int?              @db.Integer
  id_car              Int?              @db.Integer
  id_supplier         Int?              @db.Integer
  name                String            @db.VarChar(255)
  part_no             String            @db.VarChar(255)
  genuine             String            @db.VarChar(255)
  stock               Int               @default(0) @db.Integer
  capital_price       BigInt            @db.BigInt
  sell_method         String            @db.VarChar(255)
  is_available        Boolean           @default(false) @db.Boolean
  sale_price          BigInt            @db.BigInt
  description         String            @db.Text
  supply_date         DateTime          @db.Timestamptz()
  created_at          DateTime          @default(now()) @db.Timestamptz()
  updated_at          DateTime          @default(now()) @updatedAt @db.Timestamptz()
  Category            Category?         @relation(fields: [id_category], references: [id], onDelete: SetNull)
  SparePartBrand      SparePartBrand    @relation(fields: [id_spare_part_brand], references: [id])
  Car                 Car?              @relation(fields: [id_car], references: [id])
  Supplier            Supplier?         @relation(fields: [id_supplier], references: [id])
  SpecialPrice        SpecialPrice[]
  StockAdjustment     StockAdjustment[]
  PurchaseDetail      PurchaseDetail[]
  CartDetail          CartDetail[]
  SaleDetail          SaleDetail[]

  @@map("spare_parts")
}

model SparePartBrand {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  manufacture String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamptz()
  updated_at  DateTime    @default(now()) @updatedAt @db.Timestamptz()
  SparePart   SparePart[]

  @@map("spare_part_brands")
}

model Category {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  description String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamptz()
  updated_at  DateTime    @default(now()) @updatedAt @db.Timestamptz()
  SparePart   SparePart[]

  @@map("categories")
}

model Supplier {
  id                Int         @id @default(autoincrement())
  company_name      String      @db.VarChar(255)
  company_phone     String?      @db.VarChar(255)
  pic_name          String      @db.VarChar(255)
  pic_phone         String?      @db.VarChar(255)
  bank_account      String      @db.VarChar(255)
  bank_account_name String      @db.VarChar(255)
  address           String?     @db.Text
  status            String      @default("ACTIVE") @db.VarChar(255)
  created_at        DateTime    @default(now()) @db.Timestamptz()
  updated_at        DateTime    @default(now()) @updatedAt @db.Timestamptz()
  Purchase          Purchase[]
  SparePart         SparePart[]

  @@map("suppliers")
}

model SpecialPrice {
  id            Int       @id @default(autoincrement())
  id_spare_part Int       @db.Integer
  id_user       Int       @db.Integer
  price         BigInt    @db.BigInt
  created_at    DateTime  @default(now()) @db.Timestamptz()
  updated_at    DateTime  @default(now()) @updatedAt @db.Timestamptz()
  SparePart     SparePart @relation(fields: [id_spare_part], references: [id], onDelete: Cascade)
  User          User      @relation(fields: [id_user], references: [id], onDelete: Cascade)

  @@map("special_prices")
}

model Purchase {
  id              Int              @id @default(autoincrement())
  id_supplier     Int?             @db.Integer
  code            String           @db.VarChar(255)
  purchase_date   DateTime         @db.Timestamptz()
  grand_total     BigInt           @db.BigInt
  status          Int              @db.Integer
  payment_date    DateTime?        @db.Timestamptz()
  credit_duration Int              @db.Integer
  created_at      DateTime         @default(now()) @db.Timestamptz()
  updated_at      DateTime         @default(now()) @updatedAt @db.Timestamptz()
  Supplier        Supplier?        @relation(fields: [id_supplier], references: [id])
  PurchaseDetail  PurchaseDetail[]

  @@map("purchases")
}

model PurchaseDetail {
  id            Int       @id @default(autoincrement())
  id_purchase   Int       @db.Integer
  id_spare_part Int       @db.Integer
  quantity      Int       @db.Integer
  price         BigInt    @db.BigInt
  discount      Float     @default(0) @db.DoublePrecision
  total_price   BigInt    @db.BigInt
  created_at    DateTime  @default(now()) @db.Timestamptz()
  updated_at    DateTime  @default(now()) @updatedAt @db.Timestamptz()
  Purchase      Purchase  @relation(fields: [id_purchase], references: [id])
  SparePart     SparePart @relation(fields: [id_spare_part], references: [id])

  @@map("purchase_details")
}

model Cart {
  id          Int          @id @default(autoincrement())
  id_user     Int          @db.Integer
  grand_total BigInt       @default(0) @db.BigInt
  created_at  DateTime     @default(now()) @db.Timestamptz()
  updated_at  DateTime     @default(now()) @updatedAt @db.Timestamptz()
  User        User         @relation(fields: [id_user], references: [id], onDelete: Cascade)
  CartDetail  CartDetail[]

  @@unique([id_user])
  @@map("carts")
}

model CartDetail {
  id            Int       @id @default(autoincrement())
  id_cart       Int       @db.Integer
  id_spare_part Int       @db.Integer
  quantity      Int       @db.Integer
  price         BigInt    @db.BigInt
  total_price   BigInt    @db.BigInt
  created_at    DateTime  @default(now()) @db.Timestamptz()
  updated_at    DateTime  @default(now()) @updatedAt @db.Timestamptz()
  Cart          Cart      @relation(fields: [id_cart], references: [id], onDelete: Cascade)
  SparePart     SparePart @relation(fields: [id_spare_part], references: [id], onDelete: Cascade)

  @@map("cart_details")
}

model Sale {
  id             Int          @id @default(autoincrement())
  id_user        Int?         @db.Integer
  code           String       @unique @db.VarChar(255)
  payment_method Int          @db.Integer
  grand_total    BigInt       @db.BigInt
  payment_date   DateTime?    @db.Timestamptz()
  expired_date   DateTime?    @db.Timestamptz()
  status         Int          @default(0) @db.Integer
  snap_token     String?      @db.VarChar(255)
  created_at     DateTime     @default(now()) @db.Timestamptz()
  updated_at     DateTime     @default(now()) @updatedAt @db.Timestamptz()
  User           User?        @relation(fields: [id_user], references: [id])
  SaleDetail     SaleDetail[]

  @@map("sales")
}

model SaleDetail {
  id            Int       @id @default(autoincrement())
  id_sale       Int       @db.Integer
  id_spare_part Int       @db.Integer
  quantity      Int       @db.Integer
  price         BigInt    @db.BigInt
  total_price   BigInt    @db.BigInt
  created_at    DateTime  @default(now()) @db.Timestamptz()
  updated_at    DateTime  @default(now()) @updatedAt @db.Timestamptz()
  Sale          Sale      @relation(fields: [id_sale], references: [id], onDelete: Cascade)
  SparePart     SparePart @relation(fields: [id_spare_part], references: [id], onDelete: Cascade)

  @@map("sale_details")
}

model Complaint {
  id         Int      @id @default(autoincrement())
  id_user    Int      @db.Integer
  complaint  String   @db.Text
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @default(now()) @updatedAt @db.Timestamptz()
  User       User     @relation(fields: [id_user], references: [id], onDelete: Cascade)

  @@map("complaints")
}

model StockAdjustment {
  id            Int       @id @default(autoincrement())
  id_spare_part Int       @db.Integer
  code          String    @db.VarChar(255)
  description   String    @db.Text
  old_quantity  Int       @db.Integer
  new_quantity  Int       @db.Integer
  created_at    DateTime  @default(now()) @db.Timestamptz()
  updated_at    DateTime  @default(now()) @updatedAt @db.Timestamptz()
  SparePart     SparePart @relation(fields: [id_spare_part], references: [id], onDelete: Cascade)

  @@map("stock_adjustments")
}

model File {
  id         Int      @id @default(autoincrement())
  file_id    Int      @db.Integer
  file_model String   @db.VarChar(255)
  name       String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @default(now()) @updatedAt @db.Timestamptz()

  @@map("files")
}
